{
  "name": "copilot-plus-plus",
  "displayName": "Copilot++",
  "description": "Enhances GitHub Copilot capabilities with AI-powered development workflows.",
  "version": "0.0.11",
  "publisher": "albaktiar",
  "engines": {
    "vscode": "^1.98.0"
  },
  "enabledApiProposals": [
    "contribSourceControlInputBoxMenu"
  ],
  "categories": [
    "Other",
    "SCM Providers"
  ],
  "keywords": [
    "git",
    "commit",
    "ai",
    "copilot",
    "automation"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/abaktiar/copilot-plus-plus"
  },
  "license": "MIT",
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#C80000",
    "theme": "dark"
  },
  "activationEvents": [
    "onStartupFinished",
    "onView:scm"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "copilot-plus-plus.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "copilot-plus-plus.generateCommitMessage",
        "title": "Generate Commit Message",
        "icon": "$(code)",
        "category": "Copilot++"
      },
      {
        "command": "copilot-plus-plus.generatePRDescription",
        "title": "Generate PR Description",
        "icon": "$(code)",
        "category": "Copilot++"
      },
      {
        "command": "copilot-plus-plus.reviewPrChanges",
        "title": "Review PR Changes",
        "icon": "$(code)",
        "category": "Copilot++"
      },
      {
        "command": "copilot-plus-plus.analyzeBreakingChanges",
        "title": "Analyze Breaking Changes",
        "icon": "$(warning)",
        "category": "Copilot++"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "copilot-plus-plus.generateCommitMessage",
          "group": "navigation@1",
          "when": "scmProvider == git"
        }
      ],
      "commandPalette": [
        {
          "command": "copilot-plus-plus.reviewPrChanges",
          "when": "git.state == initialized"
        },
        {
          "command": "copilot-plus-plus.generatePRDescription",
          "when": "git.state == initialized"
        },
        {
          "command": "copilot-plus-plus.analyzeBreakingChanges",
          "when": "git.state == initialized"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "copilot-plus-plus",
          "title": "Copilot++",
          "icon": "$(code)"
        }
      ]
    },
    "views": {
      "copilot-plus-plus": [
        {
          "id": "copilotPlusPlusView",
          "name": "PR Description Generator",
          "type": "webview",
          "icon": "$(code)"
        }
      ]
    },
    "configuration": {
      "title": "Copilot++",
      "properties": {
        "copilotPlusPlus.languageModel": {
          "type": "string",
          "enum": [
            "gpt-4o",
            "gpt-4o-mini",
            "claude-3.5-sonnet",
            "o1",
            "o1-mini"
          ],
          "enumDescriptions": [
            "GPT-4o - Most capable model, best for complex understanding",
            "GPT-4o-mini - Faster variant with slightly reduced capabilities",
            "Claude 3.5 Sonnet - Anthropic's model with excellent context understanding",
            "o1 - OpenAI o1 model, highest reasoning capabilities",
            "o1-mini - Smaller, faster OpenAI o1 model"
          ],
          "default": "gpt-4o",
          "description": "The language model to use for generating commit messages"
        },
        "copilotPlusPlus.defaultTargetBranch": {
          "type": "string",
          "default": "",
          "description": "The default target branch to select for PR description and review. If not set or if the branch doesn't exist, will try to use 'main' or 'master'."
        },
        "copilotPlusPlus.commitStyle": {
          "type": "string",
          "enum": [
            "conventional",
            "gitmoji",
            "custom"
          ],
          "enumDescriptions": [
            "Conventional commits (e.g. feat(scope): description)",
            "Gitmoji style with emojis (e.g. âœ¨ Add new feature)",
            "Custom format defined in commitTemplate"
          ],
          "default": "conventional",
          "description": "The style of commit messages to generate"
        },
        "copilotPlusPlus.includeTicketNumber": {
          "type": "boolean",
          "default": true,
          "description": "Include ticket numbers from branch names in commit messages"
        },
        "copilotPlusPlus.ticketPattern": {
          "type": "string",
          "default": "(?:^|\\/)([A-Z]+-\\d+)(?:\\/|$|[-_])",
          "description": "Regex pattern to extract ticket numbers from branch names"
        },
        "copilotPlusPlus.prDescriptionStyle": {
          "type": "string",
          "enum": [
            "concise",
            "detailed",
            "custom"
          ],
          "enumDescriptions": [
            "Brief summary of changes",
            "Comprehensive description with technical details",
            "Custom format defined by user"
          ],
          "default": "detailed",
          "description": "Style of the PR description generated"
        },
        "copilotPlusPlus.includeTechnicalDetails": {
          "type": "boolean",
          "default": true,
          "description": "Include a summary of file changes in the PR description"
        },
        "copilotPlusPlus.groupCommitsByType": {
          "type": "boolean",
          "default": true,
          "description": "Group commits by type in the PR description"
        },
        "copilotPlusPlus.prReview.includeSecurity": {
          "type": "boolean",
          "default": true,
          "description": "Include security vulnerability checks in PR reviews"
        },
        "copilotPlusPlus.prReview.includeCodeStyle": {
          "type": "boolean",
          "default": true,
          "description": "Check code style and best practices during PR reviews"
        },
        "copilotPlusPlus.prReview.includePerformance": {
          "type": "boolean",
          "default": true,
          "description": "Analyze code for potential performance issues during PR reviews"
        },
        "copilotPlusPlus.prReview.includeBreakingChanges": {
          "type": "boolean",
          "default": true,
          "description": "Check for breaking changes in PR reviews"
        },
        "copilotPlusPlus.prReview.enableInlineLinks": {
          "type": "boolean",
          "default": true,
          "description": "Enable clickable links to navigate to files with issues"
        },
        "copilotPlusPlus.prReview.severityLevels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "Critical",
            "High",
            "Medium",
            "Low"
          ],
          "description": "Severity levels for categorizing issues in PR reviews"
        },
        "copilotPlusPlus.prReview.includeLogicalErrors": {
          "type": "boolean",
          "default": true,
          "description": "Check for logical errors, edge cases, and flawed business logic implementation during PR reviews"
        },
        "copilotPlusPlus.prReview.includeTestingGaps": {
          "type": "boolean",
          "default": true,
          "description": "Identify missing or inadequate test coverage during PR reviews"
        },
        "copilotPlusPlus.ignoredFilePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "*.min.js",
            "*.min.css",
            "*.min.*.js",
            "*.min.*.css",
            "*.bundle.js",
            "*.bundle.css",
            "*.generated.*",
            "*.gen.*",
            "*.g.*",
            "*.map",
            "*.sourcemap",
            "dist/**",
            "build/**",
            "docs/generated/**",
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "*.ico",
            "*.svg",
            "*.woff",
            "*.woff2",
            "*.ttf",
            "*.eot",
            "package-lock.json",
            "yarn.lock",
            "pnpm-lock.yaml",
            "vendor/**",
            "node_modules/**",
            "**/api/generated/**",
            "**/lib/**/*.min.js"
          ],
          "description": "Glob patterns for files to ignore in git diffs. Defaults to a comprehensive set of non-development files including minified code, compiled output, binary files, and third-party dependencies."
        },
        "copilotPlusPlus.breakingChanges.includePrivateAPIs": {
          "type": "boolean",
          "default": false,
          "description": "Include private APIs in breaking changes analysis"
        },
        "copilotPlusPlus.breakingChanges.includeInternal": {
          "type": "boolean",
          "default": false,
          "description": "Include internal implementation details in breaking changes analysis"
        },
        "copilotPlusPlus.breakingChanges.detectionLevel": {
          "type": "string",
          "enum": [
            "strict",
            "moderate",
            "lenient"
          ],
          "enumDescriptions": [
            "Strict - Detect all potential breaking changes, including minor signature changes",
            "Moderate - Detect significant breaking changes that would affect most consumers",
            "Lenient - Only detect major breaking changes that would affect all consumers"
          ],
          "default": "moderate",
          "description": "Detection sensitivity level for breaking changes analysis"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "debug": "pnpm run compile && code --extensionDevelopmentPath=${PWD} --enable-proposed-api=albaktiar.copilot-plus-plus ."
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.0",
    "eslint": "^9.21.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.7.3"
  },
  "dependencies": {}
}

